"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkRX5UBAMEjs = require('../chunk-RX5UBAME.js');var _child_process = require('child_process');var _treekill = require('tree-kill'); var _treekill2 = _interopRequireDefault(_treekill);var _os = require('os');var l=class{constructor(s){this.MAXIMUM_WAIT_TIME_SEC=75;this.READINESS_ENDPOINT="http://127.0.0.1:8070/";this.showStdout=!0;this.process=null;this.showStdout=_nullishCoalesce(_optionalChain([s, 'optionalAccess', _2 => _2.showStdout]), () => (!0))}async stop(){await new Promise((s,o)=>{_optionalChain([this, 'access', _3 => _3.process, 'optionalAccess', _4 => _4.pid])&&_treekill2.default.call(void 0, this.process.pid,r=>{r?o(r):s(!0)})})}async run(){await this.checkIfProcessIsUp()||(this.start(),await this.waitUntilProcessIsUp())}start(){let s="npx",o=["aptos","node","run-localnet","--force-restart","--assume-yes","--with-indexer-api"],r=_os.platform.call(void 0, ),e;r==="win32"?e=_child_process.spawn.call(void 0, s,o,{shell:!0}):e=_child_process.spawn.call(void 0, s,o),this.process=e,_optionalChain([e, 'access', _5 => _5.stderr, 'optionalAccess', _6 => _6.on, 'call', _7 => _7("data",a=>{let t=a.toString();console.log(t)})]),_optionalChain([e, 'access', _8 => _8.stdout, 'optionalAccess', _9 => _9.on, 'call', _10 => _10("data",a=>{let t=a.toString();this.showStdout&&console.log(t)})])}async waitUntilProcessIsUp(){let s=await this.checkIfProcessIsUp(),o=Date.now()/1e3,r=o;for(;!s&&o+this.MAXIMUM_WAIT_TIME_SEC>r;)await _chunkRX5UBAMEjs._.call(void 0, 1e3),s=await this.checkIfProcessIsUp(),r=Date.now()/1e3;if(!s)throw new Error("Process failed to start");return!0}async checkIfProcessIsUp(){try{return(await fetch(this.READINESS_ENDPOINT)).status===200}catch (e2){return!1}}};var h=class{async init(s){let{network:o,profile:r,extraArguments:e,showStdout:a}=s,t=["aptos","init",`--network=${_nullishCoalesce(o, () => ("local"))}`,`--profile=${_nullishCoalesce(r, () => ("default"))}`];return e&&t.push(...e),this.runCommand(t,a)}async compile(s){let{packageDirectoryPath:o,namedAddresses:r,extraArguments:e,showStdout:a}=s,t=["aptos","move","compile","--package-dir",o],n=this.parseNamedAddresses(r);return t.push(...this.prepareNamedAddresses(n)),e&&t.push(...e),this.runCommand(t,a)}async test(s){let{packageDirectoryPath:o,namedAddresses:r,extraArguments:e,showStdout:a}=s,t=["aptos","move","test","--package-dir",o],n=this.parseNamedAddresses(r);return t.push(...this.prepareNamedAddresses(n)),e&&t.push(...e),this.runCommand(t,a)}async publish(s){let{packageDirectoryPath:o,namedAddresses:r,profile:e,extraArguments:a,showStdout:t}=s,n=["aptos","move","publish","--package-dir",o,`--profile=${_nullishCoalesce(e, () => ("default"))}`],i=this.parseNamedAddresses(r);return n.push(...this.prepareNamedAddresses(i)),a&&n.push(...a),this.runCommand(n,t)}async createObjectAndPublishPackage(s){let{packageDirectoryPath:o,addressName:r,namedAddresses:e,profile:a,extraArguments:t,showStdout:n}=s,i=["aptos","move","create-object-and-publish-package","--package-dir",o,"--address-name",r,`--profile=${_nullishCoalesce(a, () => ("default"))}`],d=this.parseNamedAddresses(e);i.push(...this.prepareNamedAddresses(d)),t&&i.push(...t);let{output:c}=await this.runCommand(i,n);return{objectAddress:this.extractAddressFromOutput(c)}}async upgradeObjectPackage(s){let{packageDirectoryPath:o,objectAddress:r,namedAddresses:e,profile:a,extraArguments:t,showStdout:n}=s,i=["aptos","move","upgrade-object-package","--package-dir",o,"--object-address",r,`--profile=${_nullishCoalesce(a, () => ("default"))}`],d=this.parseNamedAddresses(e);return i.push(...this.prepareNamedAddresses(d)),t&&i.push(...t),this.runCommand(i,n)}async buildPublishPayload(s){let{outputFile:o,packageDirectoryPath:r,namedAddresses:e,extraArguments:a,showStdout:t}=s,n=["aptos","move","build-publish-payload","--json-output-file",o,"--package-dir",r],i=this.parseNamedAddresses(e);return n.push(...this.prepareNamedAddresses(i)),a&&n.push(...a),this.runCommand(n,t)}async runScript(s){let{compiledScriptPath:o,profile:r,extraArguments:e,showStdout:a}=s,t=["aptos","move","run-script","--compiled-script-path",o,`--profile=${_nullishCoalesce(r, () => ("default"))}`];return e&&t.push(...e),this.runCommand(t,a)}async gasProfile(s){let{network:o,transactionId:r,extraArguments:e,showStdout:a}=s,t=["aptos","move","replay","--profile-gas","--network",o,"--txn-id",r];return e&&t.push(...e),this.runCommand(t,a)}async runCommand(s,o=!0){return new Promise((r,e)=>{let a=_os.platform.call(void 0, ),t,n="",i="";a==="win32"?t=_child_process.spawn.call(void 0, "npx",s,{shell:!0}):t=_child_process.spawn.call(void 0, "npx",s),t.stdout.on("data",d=>{i=d.toString(),n+=d.toString()}),o&&(t.stdout.pipe(process.stdout),t.stderr.pipe(process.stderr)),process.stdin.pipe(t.stdin),t.on("close",d=>{if(d===0)try{let c=JSON.parse(i);c.Error?e(new Error(`Error: ${c.Error}`)):c.Result&&r({result:c.Result,output:n})}catch (e3){r({output:n})}else e(new Error(`Child process exited with code ${d}`))})})}prepareNamedAddresses(s){let o=s.size,r=[];if(o===0)return r;r.push("--named-addresses");let e=[];return s.forEach((a,t)=>{let n=`${t}=${a.toString()}`;e.push(n)}),r.push(e.join(",")),r}parseNamedAddresses(s){let o=new Map;return Object.keys(s).forEach(r=>{let e=s[r];o.set(r,e)}),o}extractAddressFromOutput(s){let o=s.match("Code was successfully deployed to object address (0x[0-9a-fA-F]+)");if(o)return o[1];throw new Error("Failed to extract object address from output")}};exports.LocalNode = l; exports.Move = h;
//# sourceMappingURL=index.js.map